package impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import mapper.IMapper;
import domain.Menu;
import repo.IMenuRepository;
import uow.IUnitOfWork;

public class MenuRepository extends RepositoryBase<Menu> implements IMenuRepository {
	
	String selectByTypeSql="SELECT * FROM menu WHERE type=?";
	PreparedStatement selectByType;
	String selectByIdSql="SELECT * FROM menu WHERE id=?";
	PreparedStatement selectById;

	public MenuRepository(Connection connection, IMapper<Menu> mapper, IUnitOfWork uow) throws SQLException{
		super(connection, mapper, uow);
		
	}

	@Override
	protected String getUpdateQuerySql() {
		return "UPDATE menu SET (type) = (?) WHERE id=?";
	}
	
	@Override
	protected String getInsertQuerySql() {
		return "INSERT INTO menu(type) VALUES (?)" ;
	}

	@Override
	protected String getTableName() {
		return "menu";
	}

	@Override
	protected String createTableStatementSql() {
		return "CREATE TABLE menu("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
				+ "type varchar(20),"
				+ ")";
	}

	@Override
	protected void setUpdate(Menu menu) throws SQLException {
		update.setString(1, menu.getType());
	}

	@Override
	protected void setInsert(Menu menu) throws SQLException {
		insert.setString(1, menu.getType());
	}

	@Override
	public List<Menu> withType(String type) {
		List<Menu> result = new ArrayList<Menu>();
		try {
			selectByType.setString(1, type);
			ResultSet rs = selectByType.executeQuery();
			while(rs.next()) result.add(mapper.map(rs));
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return result;
	}

	@Override
	public List<Menu> withId(String id) {
		List<Menu> result = new ArrayList<Menu>();
		try {
			selectById.setString(1, id);
			ResultSet rs = selectById.executeQuery();
			while(rs.next()) result.add(mapper.map(rs));
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return result;
	}

}
