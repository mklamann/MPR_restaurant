package impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import mapper.IMapper;
import domain.Menu;
import domain.Restaurant;
import repo.IRestaurantRepository;
import uow.IUnitOfWork;


public class RestaurantRepository extends RepositoryBase<Restaurant> implements IRestaurantRepository {
	
	String slectByIdSql = "SELECT * FROM restaurant WHERE id=?";
	PreparedStatement selectById;
	
	public RestaurantRepository(Connection connection, IMapper<Restaurant> mapper, IUnitOfWork uow) throws SQLException{
		super(connection, mapper, uow);

	}

	@Override
	protected String getUpdateQuerySql() {
		return "UPDATE restaurant SET (name,address,phone) = (?,?,?) WHERE id=?";
	}
	
	@Override
	protected String getInsertQuerySql() {
		return "INSERT INTO restaurant(name,address,phone) VALUES (?,?,?)" ;
	}

	@Override
	protected String getTableName() {
		return "restaurant";
	}

	@Override
	protected String createTableStatementSql() {
		return "CREATE TABLE restaurant("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
				+ "name varchar(20),"
				+ "address varchar(100)"
				+ "phone varchar(9)"
				+ ")";
	}

	@Override
	protected void setUpdate(Restaurant restaurant) throws SQLException {
		update.setString(1, restaurant.getName());
		update.setString(2, restaurant.getAddress());
		update.setString(3, restaurant.getPhone());
	}

	@Override
	protected void setInsert(Restaurant restaurant) throws SQLException {
		insert.setString(1, restaurant.getName());
		insert.setString(2, restaurant.getAddress());
		insert.setString(3, restaurant.getPhone());
	}

	@Override
	public List<Restaurant> withId(String id) {
		List<Restaurant> result = new ArrayList<Restaurant>();
		try {
			selectById.setString(1, id);
			ResultSet rs = selectById.executeQuery();
			while(rs.next()) result.add(mapper.map(rs));
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return result;
	}

}
